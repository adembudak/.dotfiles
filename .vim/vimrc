set nonumber
set autoread
set splitbelow
set splitright
set signcolumn=yes

runtime! ftplugin/man.vim

call plug#begin()

Plug 'tpope/vim-sensible'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'dracula/vim'

call plug#end()

let g:coc_global_extensions = [
  \'coc-json'
  \,'coc-yaml'
  \,'coc-git'
  \,'coc-clangd'
  \,'coc-explorer'
\]

colorscheme dracula

let mapleader = "t"
command! ReloadVimrc source $MYVIMRC
nnoremap <silent> <Plug>ReloadVimrc :ReloadVimrc <enter>
nnoremap <leader>r <Plug> ReloadVimrc

command! EditVimrc split $MYVIMRC
nnoremap <silent> <Plug>EditVimrc :EditVimrc <enter>
nnoremap <leader>e <Plug>EditVimrc

nnoremap <leader>cr :CocRestart <enter>
nnoremap         e  <Plug>(coc-rename)
nnoremap        fe  :CocCommand document.renameCurrentWord <enter>
nnoremap <leader>w  :call CocAction('doHover') <enter>

inoremap <silent><expr> <C-n> coc#pum#visible() ? coc#pum#next(1) : "\<C-n>"
inoremap <silent><expr> <C-p> coc#pum#visible() ? coc#pum#prev(1) : "\<C-p>"
inoremap <silent><expr> <C-e> coc#pum#visible() ? coc#pum#cancel() : "\<C-e>"
inoremap <silent><expr> <C-y> coc#pum#visible() ? coc#pum#confirm() : "\<C-y>"

nnoremap <leader>e  <Plug>(coc-diagnostic-next-error)
nnoremap <leader>E  <Plug>(coc-diagnostic-prev-error)
nnoremap <leader>M  <Plug>(coc-diagnostic-next)

